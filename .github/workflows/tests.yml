name: ðŸŽ­ Tests
on:
  push:
    paths-ignore:
      - .chglog/**
      - .github/dependabot.yml
      - public/**
      - .editorconfig
      - .gitattributes
      - .gitignore
      - .htaccess
      - CHANGELOG.md
      - code-of-conduct.md
      - CONTRIBUTING.md
      - LICENSE.md
      - README.md
env:
  DB: MYSQL
  PDO: 1
  SS_ENVIRONMENT_TYPE: "dev"
  RECIPE_CMS_VERSION: 4.x-dev
jobs:
  phpunit:
    name: ðŸ§© PHPUnit
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php:
          - 7.2
          - 7.3
          - 7.4
    container: brettt89/silverstripe-web:${{ matrix.php }}-apache
    services:
      database:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    env:
      SS_DEFAULT_ADMIN_USERNAME: admin
      SS_DEFAULT_ADMIN_PASSWORD: admin
      SS_DATABASE_SERVER: database
      SS_DATABASE_NAME: ss_default_${{ matrix.php }}
      SS_DATABASE_USERNAME: root
      SS_DATABASE_PASSWORD: ''
      SS_ENVIRONMENT_TYPE: dev
    steps:
      - name: Install Composer
        run: |
          curl \
            -sS https://getcomposer.org/installer \
            | php && \
            mv -f composer.phar /usr/local/bin/composer
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-data
        run: |
          echo "::set-output name=dir::$(composer config --global data-dir)"
      - name: Cache Composer Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.composer-data.outputs.dir }}
            **/vendors
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-
      - name: Install Dependencies
        run: composer install
      - name: run phpunit
        run: vendor/bin/phpunit -c "phpunit.xml" app/tests/
      # Optional, enable if your repo is using codecov
      # - name: generate coverage
      #   run: phpdbg -qrr vendor/bin/phpunit -dmemory_limit=512M --coverage-clover=coverage.xml tests/
      #   if: ${{ matrix.php == '7.4' }}
      # - name: submit coverage
      #   uses: codecov/codecov-action@v1
      #   with:
      #     file: ./coverage.xml
      #   if: ${{ matrix.php == '7.4' }}
  phpstan:
    name: ðŸ”º PHPStan
    runs-on: ubuntu-latest
    container: brettt89/silverstripe-web:7.4-apache
    steps:
      - name: Install Composer
        run: |
          curl \
            -sS https://getcomposer.org/installer \
            | php && \
            mv -f composer.phar /usr/local/bin/composer
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-data
        run: |
          echo "::set-output name=dir::$(composer config --global data-dir)"
      - name: Cache Composer Cache and dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.composer-data.outputs.dir }}
            **/vendors
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-
      - name: Install Dependencies
        run: composer install
      - name: Run PHPStan
        run:  |
          vendor/bin/phpstan analyse app/src \
            --memory-limit=1G \
            -c phpstan.neon \
            -a vendor/symbiote/silverstripe-phpstan/bootstrap.php \
            --no-ansi \
            --level 4
  phpcs:
    name: ðŸ”® PHPcs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: lint
        uses: chindit/actions-phpcs@master
        with:
          dir: app/

  npm-build:
    name: ðŸ–¼ Test Theme Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v2.1.2
      with:
        node-version: '12.x'
        registry-url: 'https://registry.npmjs.org'
    - name: Cache Node dependencies
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm install
    - name: Run build command
      run: npm run build
